// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AppRole {
  admin
  project_manager
  team_member
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  role       AppRole  @default(team_member)
  team_id    Int
  created_at DateTime @default(now())
  active     Boolean  @default(false)

  team  Team   @relation("TeamMembers", fields: [team_id], references: [id])
  tasks Task[]

  @@index(fields: [email])
}

model Team {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())

  members  User[]    @relation("TeamMembers")
  projects Project[]
}

model Project {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  team_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  team  Team   @relation(fields: [team_id], references: [id])
  tasks Task[]
}

model Task {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  project_id  Int
  assignee_id Int?
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  project  Project @relation(fields: [project_id], references: [id])
  assignee User?    @relation(fields: [assignee_id], references: [id])
}
